"use strict";

var customError      = require("es5-ext/error/custom")
  , defineLength     = require("es5-ext/function/_define-length")
  , partial          = require("es5-ext/function/#/partial")
  , copy             = require("es5-ext/object/copy")
  , normalizeOpts    = require("es5-ext/object/normalize-options")
  , callable         = require("es5-ext/object/valid-callable")
  , d                = require("d")
  , WeakMap          = require("es6-weak-map")
  , resolveLength    = require("./resolve-length")
  , extensions       = require("./registered-extensions")
  , resolveResolve   = require("./resolve-resolve")
  , resolveNormalize = require("./resolve-normalize");

var slice = Array.prototype.slice, defineProperties = Object.defineProperties;

module.exports = function (memoize) {
	return function (fn/*, options*/) {
		var map, length, options = normalizeOpts(arguments[1]), memoized, resolve, normalizer;

		callable(fn);

		// Do not memoize already memoized function
		if (hasOwnProperty.call(fn, "__memoized__") && !options.force) return fn;

		length = resolveLength(options.length, fn.length, options.async && extensions.async);
		options.length = length ? length - 1 : 0;
		map = new 